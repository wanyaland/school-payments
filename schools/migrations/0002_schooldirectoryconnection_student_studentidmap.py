# Generated by Django 5.2.5 on 2025-08-17 16:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('schools', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SchoolDirectoryConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_url', models.URLField()),
                ('api_key', models.TextField()),
                ('timeout_seconds', models.IntegerField(default=10)),
                ('student_by_provider_path', models.CharField(default='/students/by-provider/{provider}/{provider_id}', max_length=200)),
                ('student_by_school_id_path', models.CharField(default='/students/{school_id}', max_length=200)),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='directory', to='schools.school')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_student_id', models.CharField(max_length=64)),
                ('full_name', models.CharField(blank=True, max_length=200)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='schools.school')),
            ],
            options={
                'unique_together': {('school', 'school_student_id')},
            },
        ),
        migrations.CreateModel(
            name='StudentIdMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=50)),
                ('provider_student_id', models.CharField(max_length=128)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_id_maps', to='schools.school')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provider_ids', to='schools.student')),
            ],
            options={
                'unique_together': {('school', 'provider', 'provider_student_id')},
            },
        ),
    ]
